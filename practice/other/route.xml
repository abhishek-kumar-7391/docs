<?xml version="1.0" encoding="UTF-8"?>
<CLISH_MODULE xmlns="http://clish.sourceforge.net/XMLSchema" 
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 xsi:schemaLocation="http://clish.sourceforge.net/XMLSchema
                     http://clish.sourceforge.net/XMLSchema/clish.xsd">
	<!--=======================================================-->

<VIEW name="enable-view">

<!-- Show routing information -->

	<COMMAND name="show ip route"
		help="IP routing table"
		lock="false"
		interrupt="true">
		<ACTION>ip route show</ACTION>
	</COMMAND>

</VIEW>


<VIEW name="configure-view">

<!-- Enable/Disable routing -->

	<COMMAND name="ip routing"
		help="Enable IP routing">
		<CONFIG operation="unset" pattern="^no ip routing"/>
		<ACTION>
		echo "1" > /proc/sys/net/ipv4/ip_forward
		</ACTION>
	</COMMAND>

	<COMMAND name="no ip routing"
		help="Disable IP routing">
		<CONFIG priority="0x1500"/>
		<ACTION>
		echo "0" > /proc/sys/net/ipv4/ip_forward
		</ACTION>
	</COMMAND>

<!-- Default gateway -->

	<COMMAND name="ip default-gateway"
		help="Specify default gateway (if not routing IP)">
		<PARAM name="ip"
			help="IP address of default gateway"
			ptype="IP_ADDR"/>
		<PARAM name="table"
			help="table number"
			mode="subcommand"
			optional="true"
			ptype="SUBCOMMAND">
			<PARAM name="table_num"
				help=""
				ptype="UINT"/>
		</PARAM>
		<CONFIG pattern="^${__line}"/>
		<ACTION>
			/bin/cvm --ipv4 ${ip}
			if [ $? -ne 0 ]; then
				exit 1
			fi

			if [ ${table_num} ]; then
				ip route replace default via ${ip} table ${table_num}
			else
				ip route replace default via ${ip}
			fi
		</ACTION>
	</COMMAND>

	<COMMAND name="no ip default-gateway"
		help="Specify default gateway (if not routing IP)">
		<PARAM name="ip"
			help="IP address of default gateway"
			ptype="IP_ADDR"/>
		<PARAM name="table"
			help="table number"
			mode="subcommand"
			optional="true"
			ptype="SUBCOMMAND">
			<PARAM name="table_num"
				help=""
				ptype="UINT"/>
		</PARAM>
		<CONFIG operation="unset" pattern="^ip default-gateway ${ip} table ${table_num}"/>
		<ACTION>
			/bin/cvm --ipv4 ${ip}
			if [ $? -ne 0 ]; then
				exit 1
			fi

			if [ ${table_num} ]; then
				ip route del default via ${ip} table ${table_num}
			else
				ip route del default via ${ip}
			fi
		</ACTION>
	</COMMAND>

<!-- Set/Unset static route -->

	<!-- <COMMAND name="ip route"
		help="Establish static routes">
		<PARAM name="ip"
			help="Destination prefix"
			ptype="IP_ADDR_MASK"/>
		<PARAM name="route_target"
			help="Route target"
			ptype="STRING"
			mode="switch">
			<PARAM name="ethernet"
				help="Ethernet IEEE 802.3"
				ptype="SUBCOMMAND"
				mode="subcommand">
					<PARAM name="iface_num"
						help="Ethernet interface number"
						ptype="IFACE_NUM"/>
			</PARAM>
			<PARAM name="forward"
				help="Forwarding router's address"
				ptype="IP_ADDR"/>
		</PARAM>
		<CONFIG priority="0x9002" pattern="^ip route ${ip} " splitter="false"/>
		<ACTION>
		if test "${route_target}" = "ethernet"; then
			ip route replace to ${ip} dev eth${iface_num}
			exit $?
		elif test "${route_target}" = "forward"; then
			ip route replace to ${ip} via ${forward}
			exit $?
		fi
		</ACTION>
	</COMMAND> -->

	<COMMAND name="ip route"
		help="network address">
		<PARAM name="network"
			help=""
			ptype="IP_ADDR_MASK"/>
		<PARAM name="via"
			help=""
			optional="true"
			mode="subcommand"
			ptype="SUBCOMMAND">
			<PARAM name="via_val"
				help=""
				ptype="IP_ADDR"/>
		</PARAM>
		<PARAM name="table"
			help="table"
			mode="subcommand"
			optional="true"
			ptype="SUBCOMMAND">
			<PARAM name="table_num"
				help=""
				ptype="UINT"/>
		</PARAM>
		<CONFIG pattern="^ip route ${network} mask ${mask_val} table ${table_num}"/>
		<ACTION>
			/bin/cvm --ipv4 ${network}
			if [ $? -ne 0 ]; then
				exit 1
			fi
	
			if [ ${via_val} ]; then
				/bin/cvm --ipv4 ${via_val}
				if [ $? -ne 0 ]; then
					exit 1
				fi
				
				if [ ${table_num} ]; then
					ip route add ${network} via ${via_val} table ${table_num}
					exit $?
				else
					ip route add ${network} via ${via_val}
					exit $?
				fi
			fi

			if [ ${table_num} ]; then
				def_gate=`ip route list table ${table_num} | grep "default via" | awk '{print $3}'`
				if [ $def_gate ]; then
					ip route add ${network} via $def_gate table ${table_num}
				else
					echo "no default gateway present !!"
					exit 1
				fi
			else
				def_gate=`ip route list | grep "default via" | awk '{print $3}'`
				if [ $def_gate ]; then
					ip route add ${network} via $def_gate
				else
					echo "no default gateway present !!"
					exit 1
				fi
			fi
			</ACTION>
	</COMMAND>
	
	<COMMAND name="no ip route"
		help="network address">
		<PARAM name="network"
			help=""
			ptype="IP_ADDR"/>
		<PARAM name="table"
			help="table"
			optional="true"
			mode="subcommand"
			ptype="SUBCOMMAND">
			<PARAM name="table_num"
				help=""
				ptype="UINT"/>
		</PARAM>
		<ACTION>
			/bin/cvm --ipv4 ${network}
			if [ $? -ne 0 ]; then
				exit 1
			fi
	
			if [ ${via_val} ]; then
				/bin/cvm --ipv4 ${via_val}
				if [ $? -ne 0 ]; then
					exit 1
				fi
				
				if [ ${table_num} ]; then
					ip route del ${network} via ${via_val} table ${table_num}
					exit $?
				else
					ip route del ${network} via ${via_val}
					exit $?
				fi
			fi

			if [ ${table_num} ]; then
				def_gate=`ip route list table ${table_num} | grep "default via" | awk '{print $3}'`
				if [ $def_gate ]; then
					ip route del ${network} via $def_gate table ${table_num}
				else
					echo "no default gateway present !!"
					exit 1
				fi
			else
				def_gate=`ip route list | grep "default via" | awk '{print $3}'`
				if [ $def_gate ]; then
					ip route del ${network} via $def_gate
				else
					echo "no default gateway present !!"
					exit 1
				fi
			fi
		</ACTION>
		<CONFIG operation="unset" pattern="^ip route ${network} mask ${mask_val} table ${table_num}"/>
	</COMMAND>
	<COMMAND name="ip policy"
		help="set ip policy">
		<PARAM name="from"
			help="network address"
			mode="subcommand"
			ptype="SUBCOMMAND">
			<PARAM name="from_ip"
				help=""
				ptype="IP_ADDR"/>
		</PARAM>
		<PARAM name="to"
			help="network address"
			mode="subcommand"
			ptype="SUBCOMMAND">
			<PARAM name="to_ip"
				help=""
				ptype="IP_ADDR"/>
		</PARAM>
		<PARAM name="table"
			help="table number"
			mode="subcommand"
			optional="true"
			ptype="SUBCOMMAND">
			<PARAM name="table_num"
				help=""
				ptype="UINT"/>
		</PARAM>
		<CONFIG pattern="^ip policy from ${from} to ${to_ip} table ${table_num}"/>
		<ACTION>
			if [ ${table_num} ]; then
				ip rule add from ${from_ip} to ${to_ip} table ${table_num}
			else
				ip rule add from ${from_ip} to ${to_ip}
			fi
		</ACTION>
	</COMMAND>	

	<COMMAND name="no ip policy"
		help="set ip policy">
		<PARAM name="from"
			help="network address"
			mode="subcommand"
			ptype="SUBCOMMAND">
			<PARAM name="from_ip"
				help=""
				ptype="IP_ADDR"/>
		</PARAM>
		<PARAM name="to"
			help="network address"
			mode="subcommand"
			ptype="SUBCOMMAND">
			<PARAM name="to_ip"
				help=""
				ptype="IP_ADDR"/>
		</PARAM>
		<PARAM name="table"
			help="table number"
			mode="subcommand"
			ptype="SUBCOMMAND">
			<PARAM name="table_num"
				help=""
				ptype="UINT"/>
		</PARAM>
		<CONFIG operation="unset" pattern="^ip policy from ${from_ip} to ${to_ip} table ${table_num}"/>
		<ACTION>
			if [ ${table_num} ]; then
				ip rule del from ${from_ip} to ${to_ip} table ${table_num}
			else
				ip rule del from ${from_ip} to ${to_ip}
			fi
		</ACTION>
	</COMMAND>
</VIEW>

</CLISH_MODULE>
